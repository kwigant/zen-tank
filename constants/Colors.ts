/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */


export const Colors = {
  light: {
    "primary": "rgb(0, 102, 133)",
    "onPrimary": "rgb(255, 255, 255)",
    "primaryContainer": "rgb(191, 233, 255)",
    "onPrimaryContainer": "rgb(0, 31, 42)",
    "secondary": "rgb(27, 108, 48)",
    "onSecondary": "rgb(255, 255, 255)",
    "secondaryContainer": "rgb(164, 245, 170)",
    "onSecondaryContainer": "rgb(0, 33, 8)",
    "tertiary": "rgb(94, 82, 167)",
    "onTertiary": "rgb(255, 255, 255)",
    "tertiaryContainer": "rgb(229, 222, 255)",
    "onTertiaryContainer": "rgb(26, 2, 97)",
    "error": "rgb(156, 65, 61)",
    "onError": "rgb(255, 255, 255)",
    "errorContainer": "rgb(255, 218, 215)",
    "onErrorContainer": "rgb(65, 0, 4)",
    "background": "rgb(251, 252, 254)",
    "onBackground": "rgb(25, 28, 30)",
    "surface": "rgb(251, 252, 254)",
    "onSurface": "rgb(25, 28, 30)",
    "surfaceVariant": "rgb(220, 227, 233)",
    "surfaceVariantAlpha": "rgba(220, 227, 233, 0.5)",
    "onSurfaceVariant": "rgb(64, 72, 76)",
    "outline": "rgb(112, 120, 125)",
    "outlineVariant": "rgb(192, 200, 205)",
    "shadow": "rgb(0, 0, 0)",
    "scrim": "rgb(0, 0, 0)",
    "inverseSurface": "rgb(46, 49, 51)",
    "inverseOnSurface": "rgb(240, 241, 243)",
    "inversePrimary": "rgb(108, 210, 255)",
    "elevation": {
      "level0": "transparent",
      "level1": "rgb(238, 245, 248)",
      "level2": "rgb(231, 240, 244)",
      "level3": "rgb(223, 236, 241)",
      "level4": "rgb(221, 234, 240)",
      "level5": "rgb(216, 231, 237)"
    },
    "surfaceDisabled": "rgba(25, 28, 30, 0.12)",
    "onSurfaceDisabled": "rgba(25, 28, 30, 0.38)",
    "backdrop": "rgba(42, 49, 54, 0.4)"
  },
  dark: {
    "primary": "rgb(108, 210, 255)",
    "onPrimary": "rgb(0, 53, 71)",
    "primaryContainer": "rgb(0, 77, 101)",
    "onPrimaryContainer": "rgb(191, 233, 255)",
    "secondary": "rgb(137, 217, 144)",
    "onSecondary": "rgb(0, 57, 18)",
    "secondaryContainer": "rgb(0, 83, 30)",
    "onSecondaryContainer": "rgb(164, 245, 170)",
    "tertiary": "rgb(200, 191, 255)",
    "onTertiary": "rgb(47, 33, 117)",
    "tertiaryContainer": "rgb(70, 58, 141)",
    "onTertiaryContainer": "rgb(229, 222, 255)",
    "error": "rgb(255, 179, 174)",
    "onError": "rgb(95, 20, 20)",
    "errorContainer": "rgb(126, 42, 40)",
    "onErrorContainer": "rgb(255, 218, 215)",
    "background": "rgb(25, 28, 30)",
    "onBackground": "rgb(225, 226, 229)",
    "surface": "rgb(25, 28, 30)",
    "onSurface": "rgb(225, 226, 229)",
    "surfaceVariant": "rgb(64, 72, 76)",
    "surfaceVariantAlpha": "rgb(64, 72, 76, 0.5)",
    "onSurfaceVariant": "rgb(192, 200, 205)",
    "outline": "rgb(138, 146, 151)",
    "outlineVariant": "rgb(64, 72, 76)",
    "shadow": "rgb(0, 0, 0)",
    "scrim": "rgb(0, 0, 0)",
    "inverseSurface": "rgb(225, 226, 229)",
    "inverseOnSurface": "rgb(46, 49, 51)",
    "inversePrimary": "rgb(0, 102, 133)",
    "elevation": {
      "level0": "transparent",
      "level1": "rgb(29, 37, 41)",
      "level2": "rgb(32, 43, 48)",
      "level3": "rgb(34, 48, 55)",
      "level4": "rgb(35, 50, 57)",
      "level5": "rgb(37, 54, 62)"
    },
    "surfaceDisabled": "rgba(225, 226, 229, 0.12)",
    "onSurfaceDisabled": "rgba(225, 226, 229, 0.38)",
    "backdrop": "rgba(42, 49, 54, 0.4)"
  }
};
